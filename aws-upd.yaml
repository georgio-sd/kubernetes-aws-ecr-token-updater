apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: ecr-cred-helper
  namespace: default
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      backoffLimit: 4
      template:
        metadata:
          creationTimestamp: null
        spec:
          serviceAccountName: aws-token-updater
          containers:
          - command:
            - /bin/sh
            - -c
            - |-
              SECRET_NAME=${AWS_REGION}-ecr-registry
              EMAIL=anymail.doesnt.matter@email.com
              TOKEN=`aws ecr get-login --region $AWS_REGION --registry-ids $AWS_ACCOUNT | cut -d' ' -f6`
              echo "ENV variables setup done."
              kubectl delete secret --ignore-not-found $SECRET_NAME
              kubectl create secret docker-registry $SECRET_NAME \
              --docker-server=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com \
              --docker-username=AWS \
              --docker-password="$TOKEN" \
              --docker-email="$EMAIL"
              echo "Secret created by name. $SECRET_NAME"
              kubectl patch serviceaccount aws-token-updater -p '{"imagePullSecrets":[{"name":"'$SECRET_NAME'"}]}'
              echo "All done."
            env:
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  name: aws-cred
                  key: default-region
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-cred
                  key: access-key
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-cred
                  key: key-id
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: aws-cred
                  key: region
            - name: AWS_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: aws-cred
                  key: account
            image: 112904*****.dkr.ecr.us-west-1.amazonaws.com/aws-kubectl:2019-09-16
            imagePullPolicy: IfNotPresent
            name: ecr-cred-helper
            resources: {}
            securityContext:
              capabilities: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: Default
          hostNetwork: true
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          nodeSelector:
            node-role.kubernetes.io/master: ""
          tolerations:
          - key: node-role.kubernetes.io/master
            effect: NoSchedule
  schedule: "0 */11 * * *"
  suspend: false
  
